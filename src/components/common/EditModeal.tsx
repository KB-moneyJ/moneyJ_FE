import React, { useState } from "react";
import {
  ItemList,
  Item,
  Label,
  ModalContent,
  Header,
  Title,
  CleanInput,
  CleanInput2,
  DeleteButton, ItemWrapper, Item2, AddButton
} from '../../pages/StartPlan/PlanCard/PlanCardStyle';
import { Check, X } from "lucide-react";

interface ExpenseItem {
  id: string;
  label: string;
  amount: number;
  icon: React.ReactNode;
}

interface EditModalProps {
  items: ExpenseItem[];
  coveredSet: Set<string>;
  onSave: (updatedItems: ExpenseItem[]) => void;
  onClose: () => void;
}

export default function EditModal({ items, coveredSet, onSave, onClose }: EditModalProps) {
  const [localItems, setLocalItems] = useState<ExpenseItem[]>(items);

  const total = localItems.reduce((sum, i) => sum + i.amount, 0);

  const handleAmountChange = (id: string, value: string) => {
    const numericValue = Number(value.replace(/,/g, "")) || 0;
    setLocalItems((prev) =>
      prev.map((i) =>
        i.id === id ? { ...i, amount: numericValue } : i
      )
    );
  };


  const handleLabelChange = (id: string, value: string) => {
    setLocalItems((prev) =>
      prev.map((i) =>
        i.id === id ? { ...i, label: value } : i
      )
    );
  };

  const handleAddCategory = () => {
    const newId = `custom-${Date.now()}`;
    setLocalItems((prev) => [
      ...prev,
      { id: newId, label: "기타", amount: 0,
        icon:<svg width="18" height="25" viewBox="0 0 18 25" fill="none" xmlns="http://www.w3.org/2000/svg">
          <mask id="path-1-inside-1_314_615" fill="white">
            <path d="M16.6603 0.648331C17.1023 1.02234 17.402 1.57297 17.4524 2.1298C17.4553 2.21449 17.4551 2.29914 17.455 2.38387C17.455 2.4098 17.4551 2.43572 17.4551 2.46165C17.4552 2.53295 17.4552 2.60426 17.4552 2.67556C17.4552 2.75312 17.4553 2.83068 17.4554 2.90823C17.4555 3.0621 17.4556 3.21596 17.4556 3.36982C17.4556 3.55412 17.4557 3.73843 17.4559 3.92273C17.4562 4.36829 17.4563 4.81385 17.4564 5.25941C17.4564 5.47032 17.4565 5.68123 17.4566 5.89214C17.4568 6.61447 17.457 7.3368 17.4571 8.05914C17.4571 8.10448 17.4571 8.14983 17.4571 8.19518C17.4571 8.24064 17.4571 8.28609 17.4571 8.33155C17.4571 8.42274 17.4572 8.51393 17.4572 8.60512C17.4572 8.62773 17.4572 8.65034 17.4572 8.67364C17.4572 9.40604 17.4576 10.1384 17.458 10.8708C17.4585 11.6456 17.4588 12.4204 17.4588 13.1951C17.4588 13.2803 17.4588 13.3655 17.4588 13.4506C17.4588 13.4716 17.4588 13.4926 17.4588 13.5142C17.4588 13.8508 17.4591 14.1874 17.4593 14.524C17.4596 14.8628 17.4597 15.2017 17.4595 15.5405C17.4595 15.7415 17.4595 15.9424 17.4598 16.1434C17.46 16.278 17.46 16.4127 17.4598 16.5474C17.4597 16.6238 17.4597 16.7003 17.4599 16.7767C17.4615 17.2638 17.4345 17.7457 17.3385 18.2258C17.336 18.2386 17.3335 18.2515 17.3309 18.2647C17.1816 19.0247 16.928 19.7769 16.5427 20.4623C16.5194 20.5042 16.4967 20.5465 16.474 20.5888C16.124 21.2351 15.6619 21.8208 15.1339 22.3493C15.0963 22.3869 15.0592 22.4248 15.0226 22.4633C14.9386 22.5514 14.8543 22.6339 14.7576 22.7099C14.7176 22.7424 14.681 22.7769 14.6441 22.8125C14.5672 22.8856 14.4839 22.9493 14.3984 23.0133C14.3464 23.0533 14.2973 23.0949 14.2481 23.1378C14.141 23.2288 14.0249 23.3055 13.9063 23.3825C13.8673 23.408 13.8287 23.434 13.7902 23.4601C12.5186 24.3189 10.9943 24.8284 9.43233 24.9445C9.40637 24.9465 9.38041 24.9486 9.35367 24.9508C7.53373 25.08 5.69817 24.6428 4.11161 23.7361C4.09057 23.7241 4.06952 23.7121 4.04784 23.6997C3.91052 23.6201 3.77934 23.5349 3.64996 23.4445C3.629 23.43 3.60805 23.4156 3.58645 23.4007C3.38062 23.2567 3.17511 23.1126 2.98611 22.9494C2.94525 22.9144 2.90389 22.8803 2.86211 22.8463C2.77962 22.779 2.699 22.71 2.61898 22.6401C2.60575 22.6287 2.59251 22.6172 2.57888 22.6055C2.49968 22.5363 2.42671 22.4645 2.35622 22.3876C2.31565 22.3438 2.27323 22.3019 2.23054 22.2599C2.10257 22.1338 1.98563 22.0024 1.87314 21.8641C1.84966 21.8355 1.82561 21.8073 1.80151 21.7792C1.55992 21.4949 1.34763 21.1854 1.15483 20.8704C1.14361 20.8524 1.14361 20.8524 1.13217 20.834C0.514144 19.8371 0.150162 18.7182 0.0260751 17.5741C0.0241797 17.5572 0.0222844 17.5402 0.0203316 17.5227C0.0023215 17.338 0.001897 17.153 0.00151518 16.9676C0.00132284 16.9113 0.000706552 16.855 8.41301e-05 16.7986C-0.00147493 16.5324 0.0179135 16.2798 0.1189 16.0279C0.123948 16.015 0.128996 16.0021 0.134197 15.9888C0.36907 15.4077 0.829372 14.9127 1.43942 14.6545C2.10641 14.384 2.8085 14.3796 3.4845 14.6181C3.71339 14.705 3.91544 14.8215 4.10496 14.9693C4.14702 15.0027 4.14702 15.0027 4.20443 15.0371C4.20443 15.0493 4.20443 15.0616 4.20443 15.0742C4.21562 15.0785 4.2268 15.0828 4.23832 15.0873C4.60452 15.2807 4.83587 15.8257 4.94519 16.1822C5.01374 16.4161 5.02501 16.6508 5.0385 16.8916C5.05725 17.2238 5.1058 17.5346 5.21437 17.8519C5.21916 17.8659 5.22396 17.88 5.22889 17.8944C5.46449 18.5674 5.94096 19.183 6.56095 19.5926C6.57251 19.6004 6.58407 19.6081 6.59597 19.6161C6.76878 19.7308 6.94678 19.8255 7.13851 19.9097C7.17091 19.9242 7.20281 19.9397 7.23463 19.9553C8.0397 20.3372 9.06499 20.3239 9.9076 20.0741C10.7586 19.8037 11.4873 19.2504 11.927 18.5153C11.9472 18.4817 11.9678 18.4483 11.9885 18.4149C12.1894 18.0834 12.3161 17.7068 12.378 17.3311C12.3803 17.3172 12.3826 17.3033 12.3849 17.289C12.4315 16.9777 12.4259 16.6629 12.4265 16.3494C12.4267 16.2817 12.4269 16.214 12.4272 16.1462C12.4276 16.0292 12.428 15.9122 12.4283 15.7952C12.4287 15.626 12.4293 15.4568 12.4299 15.2876C12.4308 15.013 12.4317 14.7385 12.4325 14.4639C12.4333 14.1974 12.4341 13.9308 12.435 13.6643C12.435 13.6396 12.435 13.6396 12.4351 13.6144C12.4354 13.5318 12.4357 13.4492 12.4359 13.3667C12.4382 12.6827 12.4403 11.9988 12.4423 11.3149C12.4546 11.3162 12.4669 11.3175 12.4795 11.3189C12.4955 11.3206 12.5116 11.3222 12.5282 11.324C12.5441 11.3257 12.56 11.3273 12.5765 11.3291C13.1264 11.3836 13.6412 11.244 14.0748 10.9226C14.105 10.8991 14.1351 10.8756 14.1652 10.852C14.1852 10.8378 14.2052 10.8237 14.2258 10.8091C14.7197 10.3866 14.9846 9.72531 15.0167 9.11124C15.0425 8.42747 14.8399 7.79771 14.383 7.2594C14.3659 7.23909 14.3659 7.23909 14.3485 7.21838C14.0619 6.89459 13.6151 6.66448 13.175 6.59273C13.1501 6.58853 13.1252 6.58433 13.0995 6.58C12.9228 6.56292 12.7422 6.57057 12.5655 6.58363C12.5424 6.58533 12.5193 6.58702 12.4955 6.58877C12.478 6.59008 12.4604 6.59139 12.4423 6.59273C12.4389 6.04873 12.4357 5.50473 12.4327 4.96072C12.4324 4.89634 12.4321 4.83195 12.4317 4.76757C12.4316 4.74835 12.4316 4.74835 12.4315 4.72873C12.4304 4.52185 12.4291 4.31497 12.4278 4.10809C12.4264 3.89544 12.4252 3.68278 12.4241 3.47013C12.4235 3.35085 12.4229 3.23156 12.422 3.11227C12.4212 2.99977 12.4206 2.88726 12.4202 2.77475C12.42 2.73368 12.4197 2.69261 12.4193 2.65154C12.4131 1.89793 12.6006 1.24662 13.1763 0.69347C14.1309 -0.190068 15.6731 -0.163399 16.6603 0.648331Z"/>
          </mask>
          <path d="M16.6603 0.648331C17.1023 1.02234 17.402 1.57297 17.4524 2.1298C17.4553 2.21449 17.4551 2.29914 17.455 2.38387C17.455 2.4098 17.4551 2.43572 17.4551 2.46165C17.4552 2.53295 17.4552 2.60426 17.4552 2.67556C17.4552 2.75312 17.4553 2.83068 17.4554 2.90823C17.4555 3.0621 17.4556 3.21596 17.4556 3.36982C17.4556 3.55412 17.4557 3.73843 17.4559 3.92273C17.4562 4.36829 17.4563 4.81385 17.4564 5.25941C17.4564 5.47032 17.4565 5.68123 17.4566 5.89214C17.4568 6.61447 17.457 7.3368 17.4571 8.05914C17.4571 8.10448 17.4571 8.14983 17.4571 8.19518C17.4571 8.24064 17.4571 8.28609 17.4571 8.33155C17.4571 8.42274 17.4572 8.51393 17.4572 8.60512C17.4572 8.62773 17.4572 8.65034 17.4572 8.67364C17.4572 9.40604 17.4576 10.1384 17.458 10.8708C17.4585 11.6456 17.4588 12.4204 17.4588 13.1951C17.4588 13.2803 17.4588 13.3655 17.4588 13.4506C17.4588 13.4716 17.4588 13.4926 17.4588 13.5142C17.4588 13.8508 17.4591 14.1874 17.4593 14.524C17.4596 14.8628 17.4597 15.2017 17.4595 15.5405C17.4595 15.7415 17.4595 15.9424 17.4598 16.1434C17.46 16.278 17.46 16.4127 17.4598 16.5474C17.4597 16.6238 17.4597 16.7003 17.4599 16.7767C17.4615 17.2638 17.4345 17.7457 17.3385 18.2258C17.336 18.2386 17.3335 18.2515 17.3309 18.2647C17.1816 19.0247 16.928 19.7769 16.5427 20.4623C16.5194 20.5042 16.4967 20.5465 16.474 20.5888C16.124 21.2351 15.6619 21.8208 15.1339 22.3493C15.0963 22.3869 15.0592 22.4248 15.0226 22.4633C14.9386 22.5514 14.8543 22.6339 14.7576 22.7099C14.7176 22.7424 14.681 22.7769 14.6441 22.8125C14.5672 22.8856 14.4839 22.9493 14.3984 23.0133C14.3464 23.0533 14.2973 23.0949 14.2481 23.1378C14.141 23.2288 14.0249 23.3055 13.9063 23.3825C13.8673 23.408 13.8287 23.434 13.7902 23.4601C12.5186 24.3189 10.9943 24.8284 9.43233 24.9445C9.40637 24.9465 9.38041 24.9486 9.35367 24.9508C7.53373 25.08 5.69817 24.6428 4.11161 23.7361C4.09057 23.7241 4.06952 23.7121 4.04784 23.6997C3.91052 23.6201 3.77934 23.5349 3.64996 23.4445C3.629 23.43 3.60805 23.4156 3.58645 23.4007C3.38062 23.2567 3.17511 23.1126 2.98611 22.9494C2.94525 22.9144 2.90389 22.8803 2.86211 22.8463C2.77962 22.779 2.699 22.71 2.61898 22.6401C2.60575 22.6287 2.59251 22.6172 2.57888 22.6055C2.49968 22.5363 2.42671 22.4645 2.35622 22.3876C2.31565 22.3438 2.27323 22.3019 2.23054 22.2599C2.10257 22.1338 1.98563 22.0024 1.87314 21.8641C1.84966 21.8355 1.82561 21.8073 1.80151 21.7792C1.55992 21.4949 1.34763 21.1854 1.15483 20.8704C1.14361 20.8524 1.14361 20.8524 1.13217 20.834C0.514144 19.8371 0.150162 18.7182 0.0260751 17.5741C0.0241797 17.5572 0.0222844 17.5402 0.0203316 17.5227C0.0023215 17.338 0.001897 17.153 0.00151518 16.9676C0.00132284 16.9113 0.000706552 16.855 8.41301e-05 16.7986C-0.00147493 16.5324 0.0179135 16.2798 0.1189 16.0279C0.123948 16.015 0.128996 16.0021 0.134197 15.9888C0.36907 15.4077 0.829372 14.9127 1.43942 14.6545C2.10641 14.384 2.8085 14.3796 3.4845 14.6181C3.71339 14.705 3.91544 14.8215 4.10496 14.9693C4.14702 15.0027 4.14702 15.0027 4.20443 15.0371C4.20443 15.0493 4.20443 15.0616 4.20443 15.0742C4.21562 15.0785 4.2268 15.0828 4.23832 15.0873C4.60452 15.2807 4.83587 15.8257 4.94519 16.1822C5.01374 16.4161 5.02501 16.6508 5.0385 16.8916C5.05725 17.2238 5.1058 17.5346 5.21437 17.8519C5.21916 17.8659 5.22396 17.88 5.22889 17.8944C5.46449 18.5674 5.94096 19.183 6.56095 19.5926C6.57251 19.6004 6.58407 19.6081 6.59597 19.6161C6.76878 19.7308 6.94678 19.8255 7.13851 19.9097C7.17091 19.9242 7.20281 19.9397 7.23463 19.9553C8.0397 20.3372 9.06499 20.3239 9.9076 20.0741C10.7586 19.8037 11.4873 19.2504 11.927 18.5153C11.9472 18.4817 11.9678 18.4483 11.9885 18.4149C12.1894 18.0834 12.3161 17.7068 12.378 17.3311C12.3803 17.3172 12.3826 17.3033 12.3849 17.289C12.4315 16.9777 12.4259 16.6629 12.4265 16.3494C12.4267 16.2817 12.4269 16.214 12.4272 16.1462C12.4276 16.0292 12.428 15.9122 12.4283 15.7952C12.4287 15.626 12.4293 15.4568 12.4299 15.2876C12.4308 15.013 12.4317 14.7385 12.4325 14.4639C12.4333 14.1974 12.4341 13.9308 12.435 13.6643C12.435 13.6396 12.435 13.6396 12.4351 13.6144C12.4354 13.5318 12.4357 13.4492 12.4359 13.3667C12.4382 12.6827 12.4403 11.9988 12.4423 11.3149C12.4546 11.3162 12.4669 11.3175 12.4795 11.3189C12.4955 11.3206 12.5116 11.3222 12.5282 11.324C12.5441 11.3257 12.56 11.3273 12.5765 11.3291C13.1264 11.3836 13.6412 11.244 14.0748 10.9226C14.105 10.8991 14.1351 10.8756 14.1652 10.852C14.1852 10.8378 14.2052 10.8237 14.2258 10.8091C14.7197 10.3866 14.9846 9.72531 15.0167 9.11124C15.0425 8.42747 14.8399 7.79771 14.383 7.2594C14.3659 7.23909 14.3659 7.23909 14.3485 7.21838C14.0619 6.89459 13.6151 6.66448 13.175 6.59273C13.1501 6.58853 13.1252 6.58433 13.0995 6.58C12.9228 6.56292 12.7422 6.57057 12.5655 6.58363C12.5424 6.58533 12.5193 6.58702 12.4955 6.58877C12.478 6.59008 12.4604 6.59139 12.4423 6.59273C12.4389 6.04873 12.4357 5.50473 12.4327 4.96072C12.4324 4.89634 12.4321 4.83195 12.4317 4.76757C12.4316 4.74835 12.4316 4.74835 12.4315 4.72873C12.4304 4.52185 12.4291 4.31497 12.4278 4.10809C12.4264 3.89544 12.4252 3.68278 12.4241 3.47013C12.4235 3.35085 12.4229 3.23156 12.422 3.11227C12.4212 2.99977 12.4206 2.88726 12.4202 2.77475C12.42 2.73368 12.4197 2.69261 12.4193 2.65154C12.4131 1.89793 12.6006 1.24662 13.1763 0.69347C14.1309 -0.190068 15.6731 -0.163399 16.6603 0.648331Z" fill="white" stroke="white" stroke-width="1.4" mask="url(#path-1-inside-1_314_615)"/>
          <path d="M4.04004 7.34717C4.63411 6.80924 5.51 6.75459 6.17383 7.18994L6.30371 7.28369C6.7191 7.62506 6.95134 8.09038 7.03613 8.61377L7.06348 8.84229C7.10036 9.43432 6.88811 10.021 6.46582 10.4731C6.18879 10.762 5.78969 10.9786 5.40234 11.0034C4.82936 11.0135 4.44275 10.8948 4.03125 10.5474C3.66228 10.2143 3.44169 9.73846 3.37793 9.24561L3.36035 9.03271C3.34787 8.38609 3.56436 7.81723 4.04004 7.34717Z" stroke="#F9FF7F" stroke-width="0.7"/>
          <path d="M11.7034 7.33398C12.2808 6.77027 13.2465 6.7717 13.9143 7.27832L13.9153 7.2793L13.9661 7.31836C14.376 7.64827 14.6281 8.19338 14.6809 8.7207C14.7198 9.36079 14.5564 9.9266 14.136 10.4219L14.135 10.4229C14.1256 10.4341 14.1163 10.4455 14.1067 10.457C14.0411 10.5311 13.9579 10.5954 13.842 10.6787L13.8401 10.6797C13.8194 10.6948 13.8172 10.6965 13.8 10.709C13.663 10.8039 13.5128 10.8773 13.3489 10.9287L13.1799 10.9727L13.1702 10.9746C13.1544 10.9785 13.1385 10.9823 13.1223 10.9863C12.7409 11.0659 12.3231 10.9751 11.968 10.7725C11.5246 10.4867 11.2366 10.0747 11.0881 9.58789L11.0325 9.37305C11.0299 9.35837 11.0273 9.34322 11.0247 9.32812C11.0214 9.30941 11.0182 9.29067 11.0149 9.27148C10.9785 8.9779 10.984 8.66088 11.0559 8.41211L11.0569 8.40723C11.0627 8.38597 11.0618 8.3854 11.0676 8.36426L11.0686 8.36523C11.1757 7.9803 11.3591 7.66517 11.6545 7.38281L11.7034 7.33398Z" stroke="#F9FF7F" stroke-width="0.7"/>
        </svg>
      },
    ]);
  };

  const handleDeleteCategory = (id: string) => {
    setLocalItems((prev) => prev.filter((i) => i.id !== id));
  };


  const handleSave = () => {
    onSave(localItems);
    onClose();
  };

  return (
    <div className="modal-overlay">
      <ModalContent>
        <Header>
          <div style={{height:'30px'}}>
            <Title>예상 1인 경비</Title>
          </div>
          <button onClick={onClose} style={{height:'30px',display:'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer', backgroundColor:'transparent', border:'none'}}>
            <X size={28} style={{color:'white'}} />
          </button>
        </Header>

        <CleanInput2
          type="text"
          value={total.toLocaleString()}
          readOnly
        />


        <ItemList>
          {localItems.map((i) => {
            const covered = coveredSet.has(i.id);
            const isCustom = i.id.startsWith("custom-");

            return (
              <ItemWrapper key={i.id}>
                <Item2 $covered={covered}>
                  <Label>
                    {i.icon}
                    {isCustom ? (
                      <select
                        value={i.label}
                        onChange={(e) => handleLabelChange(i.id, e.target.value)}
                        style={{
                          padding: "2px",
                          borderRadius: "50px",
                          border: "1px solid #ccc",
                          backgroundColor: "transparent",
                          color: "white",
                        }}
                      >
                        <option value="액티비티">액티비티</option>
                        <option value="투어">투어</option>
                        <option value="쇼핑">쇼핑</option>
                        <option value="기타">기타</option>
                      </select>
                    ) : (
                      <span>{i.label}</span>
                    )}
                  </Label>
                  <CleanInput
                    type="text"
                    value={i.amount.toLocaleString()}
                    onChange={(e) => handleAmountChange(i.id, e.target.value)}
                  />
                </Item2>

                {isCustom && (
                  <DeleteButton onClick={() => handleDeleteCategory(i.id)}>
                    <X size={30} />
                  </DeleteButton>
                )}
              </ItemWrapper>
            );
          })}
        </ItemList>
        <AddButton onClick={handleAddCategory} >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M16 8C16 8.25461 15.8989 8.49879 15.7188 8.67882C15.5388 8.85886 15.2946 8.96 15.04 8.96H8.96V15.04C8.96 15.2946 8.85886 15.5388 8.67882 15.7188C8.49879 15.8989 8.25461 16 8 16C7.74539 16 7.50121 15.8989 7.32118 15.7188C7.14114 15.5388 7.04 15.2946 7.04 15.04V8.96H0.96C0.705392 8.96 0.461212 8.85886 0.281178 8.67882C0.101143 8.49879 0 8.25461 0 8C0 7.74539 0.101143 7.50121 0.281178 7.32118C0.461212 7.14114 0.705392 7.04 0.96 7.04H7.04V0.96C7.04 0.705392 7.14114 0.461212 7.32118 0.281178C7.50121 0.101143 7.74539 0 8 0C8.25461 0 8.49879 0.101143 8.67882 0.281178C8.85886 0.461212 8.96 0.705392 8.96 0.96V7.04H15.04C15.2946 7.04 15.5388 7.14114 15.7188 7.32118C15.8989 7.50121 16 7.74539 16 8Z" fill="white"/>
          </svg>
        </AddButton>

        <div style={{ display: "flex", justifyContent: "center", marginTop: "30px",cursor:'pointer', width:'100%',  }}>
          <button onClick={handleSave}
                  style={{width:'88px',height:'45px',borderRadius:'8px', backgroundColor:'#A730B0', color:'white', border:'none', cursor:'pointer', display:'flex', alignItems:'center', justifyContent:'center',}}>
            저장
          </button>
        </div>
      </ModalContent>

      <style>{`
        .modal-overlay {
          position: fixed;
          inset: 0;
          background: rgba(0,0,0,0.6);
          display: flex;
          align-items: center;
          justify-content: center;
          z-index: 1000;
        }
      `}</style>
    </div>
  );
}
